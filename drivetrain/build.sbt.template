import AssemblyKeys._
import java.io.File

// sbt-assembly
assemblySettings
test in assembly := {}
mainClass in assembly := Some("edu.upenn.turbo.DrivetrainAutomatedBenchmarking")
outputPath := new File("/compiled_classes/output.jar")
mergeStrategy in assembly <<= (mergeStrategy in assembly) { (old) =>
  {
    case PathList("javax", "servlet", xs @ _*)         => MergeStrategy.first
    case PathList(ps @ _*) if ps.last endsWith ".html" => MergeStrategy.first
    case "application.conf" => MergeStrategy.concat
    case "unwanted.txt"     => MergeStrategy.discard
    case x => old(x)
  }
}

name := "drivetrain"

version := "0.1.0-SNAPSHOT"

scalaVersion := "2.11.8"

resolvers += Classpaths.typesafeReleases

parallelExecution in Test := false

libraryDependencies ++= Seq(
  "ch.qos.logback" % "logback-classic" % "1.1.5" % "runtime",
  "org.eclipse.rdf4j" % "rdf4j-runtime" % "2.2.2",
  "org.scalactic" %% "scalactic" % "3.0.1",
  "org.scalatest" %% "scalatest" % "3.0.1",
  "commons-logging" % "commons-logging" % "1.2",
  "org.ddahl" %% "rscala" % "2.5.3",
  "org.json4s" %% "json4s-jackson" % "3.6.0"
)

libraryDependencies ~= { _.map(_.exclude("org.slf4j", "slf4j-jdk14")) }
testOptions in Test += Tests.Argument(TestFrameworks.ScalaTest, "-h", "target/test-reports/html")